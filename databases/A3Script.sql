set global local_infile=1;
show databases;
drop database if exists musicAppDB;
create database musicAppDB;
show databases;
use musicAppDB;
drop table if exists Song;
drop table if exists Users;
drop table if exists Artist;
drop table if exists Producer;
drop table if exists Engineer;
drop table if exists MusicLabel;
drop table if exists Listens;
drop table if exists Performs;
drop table if exists Makes;
drop table if exists MixesAndMasters;
drop table if exists Sources;
create table Users (name varchar(20), age int, city varchar(20), state varchar(20), dateJoined date, Primary Key (name) ) ;
create table Song (name varchar(20), genre varchar(20), dateReleased date, isExplicit boolean, numListens long, Primary Key (name) ) ;
create table Artist (name varchar(20), age int, city varchar(20), state varchar(20), Primary Key (name) ) ;
create table Producer (name varchar(20), age int, city varchar(20), state varchar(20), Primary Key (name) ) ;
create table Engineer (name varchar(20), age int, city varchar(20), state varchar(20), Primary Key (name) ) ;
create table MusicLabel (name varchar(20), city varchar(20), state varchar(20), Primary Key (name) ) ;
create table Listens (userName varchar(20), songName varchar(20), numListens int, Primary Key (userName, songName), Foreign Key (songName) references Song(name) ) ;
create table Performs (artistName varchar(20), songName varchar(20), numArtists int, Primary Key (artistName, songName), Foreign Key (songName) references Song(name)) ;
create table Makes (producerName varchar(20), songName varchar(20), numProducers int, Primary Key (producerName, songName), Foreign Key (songName) references Song(name) ) ;
create table MixesAndMasters (engineerName varchar(20), songName varchar(20), numEngineers int, Primary Key (engineerName, songName), Foreign Key (songName) references Song(name) ) ;
create table Sources (labelName varchar(20), songName varchar(20), Primary Key (labelName, songName), Foreign Key (songName) references Song(name) ) ;
load data local infile 'O:\\School work\\comp sci\\databases\\data_users' into table Users fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_songs' into table Song fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_artists' into table Artist fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_producers' into table Producer fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_producers' into table Engineer fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_labels' into table MusicLabel fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_listens' into table Listens fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_performs' into table Performs fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_makes' into table Makes fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_mixes_and_masters' into table MixesAndMasters fields terminated by ',' lines terminated by '\n';
load data local infile 'O:\\School work\\comp sci\\databases\\data_sources' into table Sources fields terminated by ',' lines terminated by '\n';

show tables;
describe Users;
describe Song;
describe Artist;
describe Producer;
describe Engineer;
describe MusicLabel;
describe Listens;
describe Performs;
describe Makes;
describe MixesAndMasters;
describe Sources;
select count(*) from Users;
select count(*) from Song;
select count(*) from Artist;
select count(*) from Producer;
select count(*) from Engineer;
select count(*) from MusicLabel;
select count(*) from Listens;
select count(*) from Performs;
select count(*) from Makes;
select count(*) from MixesAndMasters;
select count(*) from Sources;
select * from Users where age =77;
select * from Song where dateReleased <= '1995-10-01';
select * from Artist where age =26;
select * from Producer where age =77;
select * from Engineer where age =77;
select * from MusicLabel where name<= 'Young Nudy LLC10';
select * from Listens where userName='Oscar26';
select * from Performs where artistName='Young Nudy26';
select * from Makes where producerName='Pi''erre Bourne34';
select * from MixesAndMasters where engineerName='Pi''erre Bourne19';
select * from Sources where labelName='Young Nudy LLC26';